@page "/R_Productos"
@page "/R_Productos/{ProductoId:int}"
@inject ProductosBLL ProductosBLL
@inject NotificationService notificationService

<EditForm Model="productos" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="card">
        <div class="card-header">
            <h3>Registro de Productos</h3>
        </div>
        <div class="card-body">

            @*Producto*@
            <div class="form-r ow align-items-center">
                <div class="col">
                    <div class="form-group">
                        <label>ProductoId</label>
                        <div class="input-group">
                           <InputNumber @bind-Value="productos.ProductoId" class="form-control col-4" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text"
                                    @onclick="Buscar">Buscar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*Descripcion*@
            <div class="form-group">
                <label>Descripcion</label>
                <InputText @bind-Value="productos.Descripcion" class="form-control" />
                <ValidationMessage For="@(() => productos.Descripcion)" />
            </div>

             @*Costo*@
            <div class="form-group">
                <label>Costo</label>
                <InputNumber @bind-Value="productos.Costo" class="form-control"/>
                <ValidationMessage For="@(() => productos.Costo)"/>
            </div>
            @*Precio*@
            <div class="form-group">
                <label>Precio</label>
                <InputNumber @bind-Value="productos.Costo" class="form-control" />
                <ValidationMessage For="@(() =>productos.Costo)" />
            </div>           
           
            @*Existencia*@
            <div class="form-group">
                <label>Existencia</label>
                <InputNumber @bind-Value="productos.Existencia" class="form-control"/>
                <ValidationMessage For="@(() => productos.Existencia)"/>
            </div>

        </div>
<fieldset class="border-success">
        <div class="card-body">
            <div class="row">

                <div class="col-2">
                    <label>Productos</label>
                    <div class="btn-group me-2" role="group" aria-label="Second group">
                        <select class="form-select" @bind="detalle.ProductoId" aria-label=".form-select-lg example">
                            <option selected>Seleccione</option>
                            @foreach (var productos in ProductosList)
                            {
                                <option value="@productos.ProductoId"> @productos.Descripcion</option>
                            }
                        </select>
                    </div>
                </div>
                @* Cantidad *@
                <div class="col-2">
                    <label>Cantidad</label>
               
                   
                </div>
                @*Boton de agregar detalle*@
                <div class="col-2">
                    <button type="button" class="btn btn-lg btn-success bi bi-file-earmark"
                        @onclick="AgregarDetalle">
                        <span class="oi oi-plus">Agregar</span>
                    </button>
                </div>
            </div>
        </div>
    </fieldset>


    @* Tabla de detalles *@
    <hr />
    <table class="table table-bordered table-light">
        <thead class="thead">
            <tr class="table">
                <th>ProductoId</th>                
                <th>Descripcion</th>
                <th>Costo</th>
                <th>Precio</th>
                <th>Existencia</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var producto  in ProductosList)
            {
                        <tr>
                        <td>@producto.ProductoId</td>                        
                        <td>@producto.Descripcion</td>
                        <td>@producto.Costo</td>
                        <td>@producto.Precio</td>
                        <td>@producto.Existencia</td>
                        </tr>
            }
        </tbody>
    </table>
    <hr />

        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary bi bi-file-earmark-plus" @onclick="Nuevo"> Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success bi bi-file-earmark"> Guardar</button>
                <button  type="button" class="btn btn-lg btn-danger bi bi-trash"  > Eliminar</button> 
            </div>
        </div>
    </div>
</EditForm >

@code {


 [Parameter]
    public int ProductoId { get; set; }
    public Productos productos { get; set; } = new Productos();
    public String mensaje { get; set; } = "";
    public ProductosDetalles detalle { get; set; } = new ProductosDetalles();
    public List<Productos> ProductosList { get; set; } = new List<Productos>();

    protected override void OnInitialized()
    {
        if (ProductoId  > 0)
        {            
            this.productos.ProductoId  = ProductoId ;
            this.Buscar();
        }
    }

    public void Nuevo()
    {
        mensaje = "";
        productos = new Productos();
    }

   

    public void Guardar()
    {

        bool guardo = ProductosBLL.Guardar(productos);

        if (guardo)
     
        
        {
            Nuevo();
              ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Guardado correctamente"
            });
        }
        else
        {

        }
    }
    private void Buscar()
    {
        if (productos.ProductoId  > 0)
        {
            var encontrado = ProductosBLL.Buscar(productos.ProductoId );

            if (encontrado != null)
                productos = encontrado;
        }
    }

     public void AgregarDetalle()
    {
      //  var productos = ProductosBLL.Buscar(productos.ProductoId);

      //this.ProductoId.productoDetalles.Add(this.productos);
       //this.detalle = new ProductosDetalles();
    }

     public void Eliminar()
    {
        bool elimino;

        elimino = ProductosBLL.Eliminar(productos);

        if (elimino)
        {
            Nuevo();

        }
    }
      void ShowNotification(NotificationMessage message)
    {
       // NotificationService.Notify(message);

    }
}